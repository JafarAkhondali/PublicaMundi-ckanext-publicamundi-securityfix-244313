from ckan.plugins import toolkit

_ = toolkit._

# Define some meaningfull exceptions 

# NOTE These exceptions derive from toolkit.ValidationError (although some
# are not strictly validation errors) because we want to be caught by the 
# action API and returned as errors to the caller (otherwise they would be
# considered a 5xx error).

class NameConflict(toolkit.ValidationError):
    '''Represent a name conflict which cannot be resolved automatically.
    '''
    
    @property
    def error_summary(self):
        return self.error_dict['name']

class IdentifierConflict(toolkit.ValidationError):
    '''Represent an identifier conflict.

    This type of exception can only appear if an identifier is present is an
    imported/harvested dataset (by default, identifiers are autogenerated as 
    UUIDs and will never conflict).
    '''
    
    @property
    def error_summary(self):
        return self.error_dict['id']

class Invalid(toolkit.ValidationError):
    '''Represent invalid input.
    '''
    pass
     
# Import action modules

from ckanext.publicamundi.lib.actions import package
from ckanext.publicamundi.lib.actions import autocomplete

